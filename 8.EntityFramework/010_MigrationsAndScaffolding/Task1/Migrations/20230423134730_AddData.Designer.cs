// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task1;

namespace Task1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230423134730_AddData")]
    partial class AddData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Task1.Buyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Buyers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "John"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bob"
                        });
                });

            modelBuilder.Entity("Task1.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BuyerId = 1,
                            Name = "Car1",
                            Price = 5000m
                        },
                        new
                        {
                            Id = 2,
                            BuyerId = 2,
                            Name = "Car2",
                            Price = 6000m
                        },
                        new
                        {
                            Id = 3,
                            BuyerId = 1,
                            Name = "Helicopter1",
                            Price = 70000m
                        },
                        new
                        {
                            Id = 4,
                            BuyerId = 2,
                            Name = "Helicopter2",
                            Price = 80000m
                        },
                        new
                        {
                            Id = 5,
                            Name = "Ship1",
                            Price = 50000m
                        });
                });

            modelBuilder.Entity("Task1.Vehicle", b =>
                {
                    b.HasOne("Task1.Buyer", "Buyer")
                        .WithMany("Vehicles")
                        .HasForeignKey("BuyerId");

                    b.Navigation("Buyer");
                });

            modelBuilder.Entity("Task1.Buyer", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
